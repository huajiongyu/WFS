@model WFS.Models.UserViewModel
@using WFS.Models
@{
    ViewBag.Title = "创建/修改用户信息";
}
<form id="edit" action="" method="post">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span>&times;</span>
        </button>
        <h4 class="modal-title" id="myModalLabel">创建/修改用户信息</h4>
    </div>
    <div class="modal-body form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-3">部门：</label>
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.DeptId, (SelectList)ViewBag.Depts, new { @class = "form-control", placeholder = "部门", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.DeptId)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">帐号：</label>
            <div class="col-md-8">
                @if (Model == null || string.IsNullOrWhiteSpace(Model.ID))
                {
                    @Html.TextBoxFor(x => x.ID, new { @class = "form-control", placeholder = "帐号", autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.ID)
                }
                else
                {
                    @Html.HiddenFor(x => x.ID)
                    <label class="control-label">@Model.ID</label>
                }
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">名称：</label>
            <div class="col-md-8">
                @*<input type="text" class="form-control" id="account" placeholder="帐号">*@
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "名称", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">邮箱地址：</label>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.EMail, new { @class = "form-control", placeholder = "邮箱", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.EMail)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">角色：</label>
            <div class="col-md-8">
                @Html.EnumDropDownListFor(x => x.Role, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">是否停用：</label>
            <div class="col-md-8">
                <div class="checkbox">
                    <label>
                        @if (Model == null || (Model.Disabled ?? false) == false)
                        {
                            <input type="checkbox" name="Disabled" value="true" />
                        }
                        else
                        {
                            <input type="checkbox" name="Disabled" value="true" checked="checked" />
                        }
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">开户银行：</label>
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.BankName, new List<SelectListItem>(), new { @class = "form-control", placeholder = "密码", autocomplete = "off", data_value = Model.BankName })
                @Html.ValidationMessageFor(m => m.BankName)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">开户支行：</label>
            <div class="col-md-2">
                @Html.DropDownListFor(x => x.BankProvice, new List<SelectListItem>(), new { @class = "form-control", autocomplete = "off", data_value = Model.BankProvice })
                @Html.ValidationMessageFor(m => m.BankProvice)
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(x => x.BankCity, new List<SelectListItem>(), new { @class = "form-control", autocomplete = "off", data_value = Model.BankCity })
                @Html.ValidationMessageFor(m => m.BankCity)
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(x => x.BankCity2, new List<SelectListItem>(), new { @class = "form-control", autocomplete = "off", data_value = Model.BankCity2 })
                @Html.ValidationMessageFor(m => m.BankCity2)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">开行支行：</label>
            <div class="col-md-8">
                @Html.EditorFor(x => x.BankSubName, new { @class = "form-control", placeholder = "开户支行名称", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.BankSubName)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">银行帐号：</label>
            <div class="col-md-8">
                @Html.EditorFor(x => x.BankAccount, new { @class = "form-control", placeholder = "银行帐号", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.BankAccount)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">密码：</label>
            <div class="col-md-8">
                @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "密码", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">确认密码：</label>
            <div class="col-md-8">
                @Html.PasswordFor(x => x.PasswordConfirm, new { @class = "form-control", placeholder = "确认密码", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.PasswordConfirm)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-3 col-md-8">
                <button type="submit" class="btn btn-primary" id="save">保存</button>
                <a class="btn btn-default" href="@Url.Action("Index")">返回用户信息列表</a>
                @Html.ValidationSummary()
            </div>
        </div>

    </div>
</form>
@section scripts{
    <script src="~/Scripts/City.js"></script>
<script src="~/Scripts/BankSet.js"></script>
}